1. When would you want to use a remote repository rather than keeping all your work local? 

>> When multiple peope are working on the project (using different computers).
   When you want to colaborate with others on GitHub with your project.
   Good as a remote back up as well.
   
2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

>> Hmm... Well if your local repository is the lastest version and the most up-to-date history of your project's commits, and GitHub automatically updated your local repo, it would overwrite your latest with an older commit history. You would lose your data.

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?

>>
		Fork - only used in the context of GitHub, copying a GitHub commit history to another. (Such as when you are collaborating on someone elses repo.)

		Clones - used to remotely clone a repository from GitHub to your local machine, or cloning a local repository to another local repository

		Branches - happens on a single repository. Used to test / have different version of your project (i.e. master, coins branches)
		
4. What is the benefit of having a copy of the last known state of the remote stored locally?

>> Your able to see the difference between your local master and your previous GitHub history (or after git fetch your updated remote history), that way you can tell if your local remote / local commits and remote repo are up-to-date.